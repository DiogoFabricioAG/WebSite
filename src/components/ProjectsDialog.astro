---
---

<!-- Dialog backdrop -->
<div id="projects-dialog" class="fixed inset-0 z-50 hidden">  <!-- Backdrop with lightning effect -->
  <div class="fixed inset-0 bg-black/80 backdrop-blur-sm transition-all duration-300 opacity-0" id="dialog-backdrop">
    <!-- Lightning lines -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute top-1/4 left-1/4 w-px h-96 bg-gradient-to-b from-transparent via-blue-400 to-transparent opacity-0 animate-lightning" style="animation-delay: 0.2s;"></div>
      <div class="absolute top-1/3 right-1/3 w-px h-80 bg-gradient-to-b from-transparent via-cyan-400 to-transparent opacity-0 animate-lightning" style="animation-delay: 0.4s;"></div>
      <div class="absolute bottom-1/4 left-1/2 w-px h-64 bg-gradient-to-b from-transparent via-blue-500 to-transparent opacity-0 animate-lightning" style="animation-delay: 0.6s;"></div>
    </div>
  </div>

  <!-- Dialog container -->
  <div class="fixed inset-0 overflow-y-auto">
    <div class="flex min-h-full items-center justify-center p-4">
        <!-- Main dialog -->
      <div id="dialog-content" class="relative bg-gray-900 border border-gray-700 rounded-2xl shadow-2xl max-w-7xl w-full max-h-[90vh] overflow-hidden transform scale-75 opacity-0 transition-all duration-300">
        
        <!-- Tech header with scanning effect -->
        <div class="relative bg-gradient-to-r from-gray-800 to-gray-900 border-b border-gray-700 p-6">
          <!-- Scanning line -->
          <div class="absolute top-0 left-0 w-full h-0.5 bg-gradient-to-r from-transparent via-blue-400 to-transparent animate-scan"></div>
          
          <div class="flex items-center justify-between">
            <div>
              <h2 class="text-3xl font-bold text-white flex items-center gap-3">
                <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-cyan-400 rounded-lg flex items-center justify-center">
                  <svg class="w-5 h-5 text-black" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
                  </svg>
                </div>
                Todos los Proyectos
              </h2>
              <p class="text-gray-400 mt-1">Explora mi portafolio completo con filtros avanzados</p>
            </div>
            
            <!-- Close button -->
            <button id="close-dialog" class="group p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-all duration-200">
              <svg class="w-6 h-6 group-hover:rotate-90 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Filters section -->
        <div class="bg-gray-800/50 border-b border-gray-700 p-6">
          <div class="flex flex-col lg:flex-row gap-4 items-start lg:items-center">
            
            <!-- Search input -->
            <div class="relative flex-1">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
              <input 
                id="search-input"
                type="text" 
                placeholder="Buscar proyectos..." 
                class="w-full pl-10 pr-4 py-3 bg-gray-900 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all"
              />
            </div>

            <!-- Tech stack filters -->
            <div class="flex flex-wrap gap-2">
              <span class="text-sm text-gray-300 mr-2 self-center">Filtrar por:</span>
              
              <button data-filter="all" class="filter-btn active px-4 py-2 bg-blue-500 text-black text-sm font-medium rounded-lg transition-all duration-200 hover:bg-blue-400">
                Todos
              </button>
              
              <button data-filter="react" class="filter-btn px-4 py-2 bg-gray-700 text-gray-300 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-600 hover:text-white">
                React
              </button>
              
              <button data-filter="vue" class="filter-btn px-4 py-2 bg-gray-700 text-gray-300 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-600 hover:text-white">
                Vue
              </button>
              
              <button data-filter="python" class="filter-btn px-4 py-2 bg-gray-700 text-gray-300 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-600 hover:text-white">
                Python
              </button>
              
              <button data-filter="ai" class="filter-btn px-4 py-2 bg-gray-700 text-gray-300 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-600 hover:text-white">
                AI/ML
              </button>
              
              <button data-filter="fullstack" class="filter-btn px-4 py-2 bg-gray-700 text-gray-300 text-sm font-medium rounded-lg transition-all duration-200 hover:bg-gray-600 hover:text-white">
                Full Stack
              </button>
            </div>
          </div>
        </div>

        <!-- Projects grid -->
        <div class="p-6 overflow-y-auto max-h-[60vh]">
          <div id="projects-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            
            <!-- Project 1 -->
            <div class="project-card" data-tags="react fullstack" data-title="ecommerce platform">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-blue-600 to-cyan-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">E-commerce Platform</h3>
                  <p class="text-gray-400 text-sm mb-3">Plataforma completa de comercio electrónico con React y Node.js</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-blue-500/20 text-blue-300 text-xs rounded">React</span>
                    <span class="px-2 py-1 bg-green-500/20 text-green-300 text-xs rounded">Node.js</span>
                    <span class="px-2 py-1 bg-purple-500/20 text-purple-300 text-xs rounded">MongoDB</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Project 2 -->
            <div class="project-card" data-tags="python ai" data-title="ia chatbot">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-purple-600 to-pink-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">IA Chatbot</h3>
                  <p class="text-gray-400 text-sm mb-3">Chatbot inteligente con procesamiento de lenguaje natural</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded">Python</span>
                    <span class="px-2 py-1 bg-red-500/20 text-red-300 text-xs rounded">TensorFlow</span>
                    <span class="px-2 py-1 bg-blue-500/20 text-blue-300 text-xs rounded">NLP</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Project 3 -->
            <div class="project-card" data-tags="vue fullstack" data-title="dashboard analytics">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-green-600 to-teal-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">Dashboard Analytics</h3>
                  <p class="text-gray-400 text-sm mb-3">Panel de control con métricas en tiempo real</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-green-500/20 text-green-300 text-xs rounded">Vue.js</span>
                    <span class="px-2 py-1 bg-blue-500/20 text-blue-300 text-xs rounded">Chart.js</span>
                    <span class="px-2 py-1 bg-orange-500/20 text-orange-300 text-xs rounded">Firebase</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Project 4 -->
            <div class="project-card" data-tags="react ai" data-title="machine learning app">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-indigo-600 to-blue-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">ML Prediction App</h3>
                  <p class="text-gray-400 text-sm mb-3">Aplicación de predicciones con Machine Learning</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-blue-500/20 text-blue-300 text-xs rounded">React</span>
                    <span class="px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded">Python</span>
                    <span class="px-2 py-1 bg-red-500/20 text-red-300 text-xs rounded">scikit-learn</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Project 5 -->
            <div class="project-card" data-tags="python fullstack" data-title="api rest backend">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-orange-600 to-red-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">API REST Backend</h3>
                  <p class="text-gray-400 text-sm mb-3">API robusta con autenticación y documentación completa</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded">Python</span>
                    <span class="px-2 py-1 bg-green-500/20 text-green-300 text-xs rounded">FastAPI</span>
                    <span class="px-2 py-1 bg-blue-500/20 text-blue-300 text-xs rounded">PostgreSQL</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Project 6 -->
            <div class="project-card" data-tags="vue ai" data-title="computer vision app">
              <div class="group bg-gray-800 border border-gray-700 rounded-xl overflow-hidden hover:border-blue-500/50 transition-all duration-300 transform hover:-translate-y-1">
                <div class="relative h-40 bg-gradient-to-br from-pink-600 to-purple-500 overflow-hidden">
                  <div class="absolute inset-0 bg-black/20"></div>
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-black/20 backdrop-blur-sm rounded-lg flex items-center justify-center border border-white/20">
                      <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z"></path>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="p-4">
                  <h3 class="text-lg font-semibold text-white mb-2">Computer Vision App</h3>
                  <p class="text-gray-400 text-sm mb-3">Reconocimiento de imágenes con IA avanzada</p>
                  <div class="flex flex-wrap gap-1 mb-3">
                    <span class="px-2 py-1 bg-green-500/20 text-green-300 text-xs rounded">Vue.js</span>
                    <span class="px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded">Python</span>
                    <span class="px-2 py-1 bg-red-500/20 text-red-300 text-xs rounded">OpenCV</span>
                  </div>
                  <div class="flex gap-2">
                    <a href="#" class="flex-1 text-center py-2 bg-blue-500 hover:bg-blue-600 text-black text-sm font-medium rounded-lg transition-colors">
                      Ver Demo
                    </a>
                    <a href="#" class="flex-1 text-center py-2 border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 text-sm font-medium rounded-lg transition-colors">
                      Código
                    </a>
                  </div>
                </div>
              </div>
            </div>

          </div>
          
          <!-- No results message -->
          <div id="no-results" class="hidden text-center py-12">
            <div class="w-16 h-16 mx-auto mb-4 text-gray-600">
              <svg fill="currentColor" viewBox="0 0 20 20">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-400 mb-2">No se encontraron proyectos</h3>
            <p class="text-gray-500">Intenta con otros filtros o términos de búsqueda</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>  @keyframes lightning {
    0% { opacity: 0; transform: scaleY(0); }
    15% { opacity: 1; transform: scaleY(1); }
    30% { opacity: 0; transform: scaleY(0); }
    100% { opacity: 0; transform: scaleY(0); }
  }

  @keyframes scan {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  .animate-lightning {
    animation: lightning 1s ease-in-out infinite;
  }

  .animate-scan {
    animation: scan 1.5s ease-in-out infinite;
  }

  .filter-btn.active {
    background: linear-gradient(to right, #3b82f6, #06b6d4);
    color: black;
  }

  .project-card {
    transition: all 0.3s ease;
  }

  .project-card.hidden {
    display: none;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const dialog = document.getElementById('projects-dialog');
    const backdrop = document.getElementById('dialog-backdrop');
    const content = document.getElementById('dialog-content');
    const closeBtn = document.getElementById('close-dialog');
    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const filterBtns = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    const noResults = document.getElementById('no-results');

    if (!dialog || !backdrop || !content || !closeBtn || !searchInput || !noResults) return;    // Open dialog function
    (window as any).openProjectsDialog = function() {
      if (!dialog || !backdrop || !content) return;
      
      dialog.classList.remove('hidden');
      
      // Lightning effect sequence (más rápido)
      setTimeout(() => {
        if (backdrop) backdrop.classList.remove('opacity-0');
      }, 35);
      
      // Dialog appears after lightning (más rápido)
      setTimeout(() => {
        if (content) {
          content.classList.remove('scale-75', 'opacity-0');
          content.classList.add('scale-100', 'opacity-100');
        }
      }, 250);    };

    // Close dialog function
    function closeDialog() {
      if (!dialog || !backdrop || !content) return;
      
      content.classList.add('scale-75', 'opacity-0');
      content.classList.remove('scale-100', 'opacity-100');
      backdrop.classList.add('opacity-0');
      
      setTimeout(() => {
        if (dialog) dialog.classList.add('hidden');
      }, 250);
    }

    // Close button event
    closeBtn.addEventListener('click', closeDialog);

    // Close on backdrop click
    backdrop.addEventListener('click', closeDialog);

    // Filter functionality
    function filterProjects() {
      const searchTerm = searchInput.value.toLowerCase();
      const activeFilterEl = document.querySelector('.filter-btn.active') as HTMLElement;
      const activeFilter = activeFilterEl?.dataset?.filter || 'all';
      let visibleCount = 0;

      projectCards.forEach(card => {
        const cardEl = card as HTMLElement;
        const title = cardEl.dataset.title?.toLowerCase() || '';
        const tags = cardEl.dataset.tags?.toLowerCase() || '';
        
        const matchesSearch = title.includes(searchTerm) || tags.includes(searchTerm);
        const matchesFilter = activeFilter === 'all' || tags.includes(activeFilter);
        
        if (matchesSearch && matchesFilter) {
          cardEl.classList.remove('hidden');
          visibleCount++;
        } else {
          cardEl.classList.add('hidden');
        }
      });      // Show/hide no results message
      if (noResults) {
        if (visibleCount === 0) {
          noResults.classList.remove('hidden');
        } else {
          noResults.classList.add('hidden');
        }
      }
    }    // Search input event
    if (searchInput) {
      searchInput.addEventListener('input', filterProjects);
    }

    // Filter button events
    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        // Update active state
        filterBtns.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        
        // Apply filter
        filterProjects();
      });
    });

    // Prevent dialog close when clicking inside content
    if (content) {
      content.addEventListener('click', (e) => {
        e.stopPropagation();
      });
    }
  });
</script>
